null == underfind // true
null >= 0 // true   null == 0 // false    null > 0 // false
underfind не сравнимо и равно только null

Сравнение разных типов -> сравниваемые приводятся к типу числа
'0' < true // true
'0' == 0 // true

0, '', null, underfind, NaN => false

result = value1 || value2 || value3; - первый true операнд слева направо / если все false то вернет последний операнд
true || alert(не сработает)
false || alert(сработает)
a ||= b : Если a ложно, присваивает a значение b.

result = value1 && value2 && value3; - находит первое ложное значение. Когда все значения верны, возвращается последнее
a &&= b : присвоит a значение b только в том случае, если a истинно.

Приоритет оператора && больше, чем у ||

!! используют для преобразования значений к логическому типу
?? возвращает первый аргумент, если он не null/undefined, иначе второй
Приоритет оператора ?? такой же, как и у ||
Запрещается использование оператора ?? вместе с && и ||. Используйте скобки, чтобы обойти это ограничение:
firstName ?? lastName ?? nickName ?? "Аноним" - получить первое значение из списка, которое не является null/undefined
x ??= y - Оператор ??= присвоит x значение y только в том случае, если x не определено (null/undefined)